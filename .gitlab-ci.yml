stages:
  - setup_remote
  - test
  - code_analysis
  - deploy

setup:
  stage: setup_remote
  script:
    - python3 -m pip uninstall datafold
    #- python3 -m pip install --upgrade pip --user
    #- python3 -m pip install --upgrade setuptools --user
    #- python3 -m pip install --upgrade twine --user
    - python3 -m pip install -r requirements-dev.txt --user
  allow_failure: false

unittests:
  stage: test
  script:
    - nosetests --with-coverage --cover-erase --cover-inclusive --cover-package=datafold/ --cover-html --cover-html-dir="./coverage/" datafold/ -v
  allow_failure: false
  artifacts:
    paths:
      - ./coverage/
    expire_in: 1 week
    when: on_success

functional_tests:
  script:
    - export PYTHONPATH=`pwd`
    - echo $PYTHONPATH
    - nosetests tutorials/ -v

black_check:
  stage: code_analysis
  script:
    - python3 -m black --version
    - python3 -m black ./datafold/ --check --diff
  allow_failure: true

isort_check:
  stage: code_analysis
  script:
    - python3 -m isort --version
    - python3 -m isort -c -rc ./datafold/
  allow_failure: true

mypy_check:
  stage: code_analysis
  script:
    - mypy ./
  allow_failure: true

docu_check:
  stage: code_analysis
  script:
    - cd doc/ && make html
  except:
    - master
  allow_failure: false

pages:
  stage: deploy
  script:
    - export DATAFOLD_NBSPHINX_EXECUTE=always
    - sphinx-apidoc -f -o ./doc/source/_apidoc/ ./datafold/
    - sphinx-build -b html ./doc/source/ ./public/
  artifacts:
    paths:
    - public
  only:
    - master

# requires to set TWINE_USERNAME and TWINE_PASSWORD in gitlab CI/CD variables
pypi_upload:
  stage: deploy
  script:
    - python3 setup.py sdist bdist_wheel
    - twine upload dist/*
  only:
    - master
  when: manual